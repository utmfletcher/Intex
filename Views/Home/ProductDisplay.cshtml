@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model Intex.Models.ViewModels.ProductListViewModel

<h1>Lego Products</h1>


@* <div class="row m-1 p-1">
        <div class="col-2 ">
            <vc:product-types />
        </div>
        <div class="container col-10">
            @foreach (Product p in Model.Products)
            {
                <partial name="ProductSummary" model="p"/>
            }

            <div page-model="@Model.PaginationInfo" page-action="ProductDisplay" page-classes-enabled="true" page-class="btn"
                 page-class-normal="btn-outline-dark" page-class-selected="btn-primary" page-url-productType="@Model.CurrentProductType" class="btn-group pull-right m-1"></div>
        </div>
    </div> *@

@* <div class="row m-1 p-1">
    <div class="col-2">
        <vc:product-types />
    </div>

    <div class="container col-10">
        <div class="container mt-3">
            <div class="row">
                @foreach (CleanProductViewModel p in Model.CleanProducts)
                {
                    <div class="col-6 mb-4">
                        <partial name="ProductSummary" model="p" />
                    </div>
                }
            </div>
            <div page-model="@Model.PaginationInfo" 
            page-action="ProductDisplay" 
            page-classes-enabled="true" 
            page-class="btn"
            page-class-normal="btn-outline-dark" 
            page-class-selected="btn-primary" 
            page-url-productType="@Model.CurrentProductType" 
            class="btn-group pull-right m-1">
            </div>
        </div>
    </div>
</div>
 *@

 <div class="row m-1 p-1">
    <div class="col-2">
        <vc:product-types />
    </div>

    <div class="container col-10">
        <div class="container mt-3">
            <div class="row">
                @foreach (CleanProductViewModel p in Model.CleanProducts)
                {
                    <div class="col-6 mb-4">
                        <partial name="ProductSummary" model="p" />
                    </div>
                }
            </div>
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <!-- Previous Page Button -->
                    <li class="page-item @(Model.PaginationInfo.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="#" aria-label="Previous"
                           onclick="goToPage(@(Model.PaginationInfo.CurrentPage - 1))">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>

                    <!-- Pagination Buttons -->
                    @for (int i = 1; i <= Model.PaginationInfo.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PaginationInfo.CurrentPage ? "active" : "")">
                            <a class="page-link" href="#" onclick="goToPage(@i)">@i</a>
                        </li>
                    }

                    <!-- Next Page Button -->
                    <li class="page-item @(Model.PaginationInfo.CurrentPage == Model.PaginationInfo.TotalPages ? "disabled" : "")">
                        <a class="page-link" href="#" aria-label="Next"
                           onclick="goToPage(@(Model.PaginationInfo.CurrentPage + 1))">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
            <div class="pagination-per-page">
                <label for="pageSizeSelect">Per page:</label>
                <select id="pageSizeSelect" onchange="setPageSize()">
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="15">15</option>
                    <option value="20">20</option>
                </select>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function goToPage(pageNumber) {
            var currentProductType = '@Model.CurrentProductType';
            var baseUrl = '@Url.Content("~/")';
            var url = '';

            if (currentProductType) {
                url = `${baseUrl}ProductDisplay/${currentProductType}/${pageNumber}`;
            } else {
                url = `${baseUrl}ProductDisplay/${pageNumber}`;
            }

            window.location.href = url;
        }

        function setPageSize() {
            var pageSize = document.getElementById('pageSizeSelect').value;
            var currentProductType = '@Model.CurrentProductType';
            var baseUrl = '@Url.Content("~/")';
            var url = '';

            // Construct URL based on whether a product type is selected
            if (currentProductType) {
                url = `${baseUrl}ProductDisplay/${currentProductType}/1/${pageSize}`;
            } else {
                url = `${baseUrl}ProductDisplay/1/${pageSize}`;
            }

            window.location.href = url;
        }

    </script>
}


